import telebot
from telebot import types

import invest_portfile
import stock_information
import visualisation

bot = telebot.TeleBot('5850999800:AAGBeKbfmi79ljRueP3tPY3aTPa4KmTyRp4')


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üíº –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è üíª")
    btn2 = types.KeyboardButton("üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞–∫—Ü–∏–∏ üìâ")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! –Ø - –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–∫—É –ø–æ "
                          f"–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–º—É –ø–æ—Ä—Ç—Ñ–µ–ª—é –∏–ª–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–∫—Ü–∏–∏!", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def user_reply(message):
    if message.text == "üíº –ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è üíª":
        mesg = bot.send_message(message.chat.id,
                                f'–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã –∞–∫—Ü–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ' + '\n' + '\n' + '<b>–¢–ò–ö–ï–†1-–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ1, –¢–ò–ö–ï–†2-–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ2</b>' + '\n' + '\n' +
                                f'–ü—Ä–∏–º–µ—Ä: <b>YNDX.ME-2, AAPL-4</b>' + '\n' + '\n' + '–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - –∑–∞–ø—è—Ç–∞—è –∏ –ø—Ä–æ–±–µ–ª, '
                                                                                    '–¥–ª—è '
                                                                              '—Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π –¥–æ–±–∞–≤—å—Ç–µ .ME –≤ –∫–æ–Ω—Ü–µ',
                                parse_mode='html')
        bot.register_next_step_handler(mesg, portfile_info)

    elif message.text == 'üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞–∫—Ü–∏–∏ üìâ':
        mesg = bot.send_message(message.chat.id,
                                f'–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–∏: ', parse_mode='html')
        bot.register_next_step_handler(mesg, stock_info)
    elif message.text == 'meme':

        photo = open('C:/Users/PC/PycharmProjects/stocks_bot/hmm.gif', 'rb')
        bot.send_animation(message.chat.id, photo)


def portfile_info(message):
    bot.send_message(message.chat.id, '–í—ã—á–∏—Å–ª—è–µ–º –±–∞–ª–∞–Ω—Å. –ü–æ–¥–æ–∂–¥–∏—Ç–µ...')
    text = message.text
    list_stocks = []
    try:
        for element in text.split(', '):
            stock, quantity = element.split('-')
            list_stocks.append([stock, int(quantity)])
        result = invest_portfile.get_all_information(list_stocks)
        types_, companies, industries, currencies = result[0], result[1], result[2], result[1]
        vis = visualisation
        try:
            types_vis = vis.visualize_type(types_)
            companies_vis = vis.visualize_companies(companies)
            industries_vis = vis.visualize_industries(industries)
            currencies_vis = vis.visualize_currencies(currencies)
            bot.send_photo(message.chat.id, types_vis)
            bot.send_photo(message.chat.id, companies_vis)
            bot.send_photo(message.chat.id, industries_vis)
            bot.send_photo(message.chat.id, currencies_vis)
        except Exception as e:
            print(e)
            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ –∏–ª–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏/–ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö')

    except Exception as e:
        print(e)
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –≤ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö')


def stock_info(message):
    st_in = stock_information
    bot.send_message(message.chat.id, '–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    try:
        res = st_in.get_stock(message.text)
        title = res[0]
        image = res[1]
        print(res)
        bot.send_photo(message.chat.id, image, caption=title)
    except Exception as e:
        print(e)


bot.polling(none_stop=True)
